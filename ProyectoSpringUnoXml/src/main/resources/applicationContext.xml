<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.1.xsd ">

<!--********* Archivo externo con los datos  Para injectar los Atibutos de la  clase DirectorEmpleado()  -->
	<context:property-placeholder location= "classpath:datosEmpresa.propiedades" />


	<!-- Paso 3 : Creacon de la dependencia -->
	<!-- bean 01 -->
	<!--[bean Informe()] Con Parametro init-metohod y destroy-metohod --> 
	<bean id="miInforme" class="es.pildorasIoC.Basico.Informe"></bean>



	<!--****** Bean para injectar  al constructor ******** -->
	<!--bean 02 --> 
	<!--[bean DirectorEmpleado()] -->
	<bean id="miEmpleado" class="es.pildorasIoC.Basico.DirectorEmpleado">
		<constructor-arg ref="miInforme"></constructor-arg>
			
			<!--********* Para injectar los Atibutos de la  clase con la configuracion de archivo externo (datosEmpresa.propiedades) -->
			<property name="correo" value="${correo}"></property> 
			<property name="empresa" value="${empresa}"></property> 
			
			
	</bean>


	<!--****** Para injectar los Atibutos de la  clase con los metodo seters de la clase ******** -->
	<!--bean 03 --> 
	<!--[bean miSecretarioEmpleados()] -->
	<bean id="miSecretarioEmpleados"
		class="es.pildorasIoC.Basico.SecretarioEmpleados">
		<property name="informeNuevo" ref="miInforme"></property> 

		<!-- ********* Para injectar los Atibutos o Compos de la  clase en forma Diirecta ******* -->
		<property name="correo" value="secretaria@masato.com"></property>
		<property name="empresa" value="Masato c.a"></property>

	</bean>

	<!-- <bean id="miEmpleado" class="es.pildoras.IoC.JefeEmpleados"><constructor-arg 
		ref="miInforme"></constructor-arg></bean> -->
</beans>

<!-- Los beans son componentes de software reutilizables que pueden ser manipulados 
	visualmente por una herramienta de programación; En el lenguaje Java. Los 
	beans son clases Java que cumplen con ciertas normas respecto a los nombres 
	de sus propiedades y métodos. Los beans deben tener un constructor sin argumentos, 
	además de tener declarados todos sus atributos como privados. Para cada atributo, 
	debe haber un método setter y getter, añadiendo la palabra set o get al nombre 
	del atributo. Bean en inglés significa “frijol, haba, alubia” . El término 
	bean se usa en informática para referirse a un componente de software reutilizable 
	que se escribe en el lenguaje en un programación . El nombre bean 
	se eligió porque los componentes de software son como granos o semillas que 
	se pueden plantar en cualquier lugar y crecer en aplicaciones más complejas -->
 
 
 
 
 
 
 
 
 
 
 
 
 
 